version: '3.8'

services:
  inventory_service:
    build:
      context: ./inventory_service
      dockerfile: Dockerfile
    volumes:
      - ./inventory_service:/code
    depends_on:
      - product_db
      - broker
    ports:
      - "8007:8000"
    env_file:
      - ./inventory_service/.env
      
  product_service:
    build:
      context: ./product_service
      dockerfile: Dockerfile
    volumes:
      - ./product_service:/code
    depends_on:
      - product_db
      - broker
    ports:
      - "8005:8000"
    env_file:
      - ./product_service/.env

  order_service:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    volumes:
      - ./order_service:/code
    depends_on:
      - order_db
      - broker
    ports:
      - "8006:8000"
    env_file:
      - ./order_service/.env

  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    volumes:
      - ./user_service:/code
    depends_on:
      - user_service_db
      - broker
    ports:
      - "8008:8000"
    env_file:
      - ./user_service/.env

  notification_service:
    build:
      context: ./notification_service
      dockerfile: Dockerfile
    volumes:
      - ./notification_service:/code
    depends_on:
      - notification_service_db
      - broker
      - user_service      
    ports:
      - "8009:8000"
    env_file:
      - ./notification_service/.env

  payment_service:
    build:
      context: ./payment_service
      dockerfile: Dockerfile
    volumes:
      - ./payment_service:/code
    depends_on:
      - payment_service_db
      - broker      
    ports:
      - "8010:8000"
    env_file:
      - ./payment_service/.env

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI

  product_db:
    image: postgres:latest
    restart: always
    container_name: PostgresProductsCont
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: product_db
    ports:
      - '5434:5432'
    volumes:
      - product_database:/var/lib/postgresql/data

  order_db:
    image: postgres:latest
    restart: always
    container_name: PostgresOrdersCont
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: order_db
    ports:
      - '5435:5432'
    volumes:
      - order_database:/var/lib/postgresql/data

  inventory_db:
    image: postgres:latest
    restart: always
    container_name: PostgresInventoryCont
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: inventory_db
    ports:
      - '5436:5432'
    volumes:
      - inventory_database:/var/lib/postgresql/data

  user_service_db:
    image: postgres:latest
    restart: always
    container_name: PostgresUserCont
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: user_service_db
    ports:
      - '5437:5432'
    volumes:
      - user_service_database:/var/lib/postgresql/data

  notification_service_db:
    image: postgres:latest
    restart: always
    container_name: PostgresNotificationCont
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: notification_service_db
    ports:
      - '5438:5432'
    volumes:
      - notification_service_database:/var/lib/postgresql/data


  payment_service_db:
    image: postgres:latest
    restart: always
    container_name: PostgresPaymentCont
    environment:
      POSTGRES_USER: ziakhan
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: payment_service_db
    ports:
      - '5439:5432'
    volumes:
      - payment_service_database:/var/lib/postgresql/data

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker

volumes:
  postgres_db:
    driver: local
  product_database:
    driver: local
  inventory_database:
    driver: local  
  order_database:
    driver: local
  user_service_database:
    driver: local
  notification_service_database:
    driver: local
  payment_service_database:
    driver: local

networks:
  default:
    driver: bridge






































